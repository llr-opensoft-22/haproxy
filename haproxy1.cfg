global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 50000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503_self.http
        errorfile 504 /etc/haproxy/errors/504.http


frontend default_frt
        bind *:80
        acl loyalty_ep path_end -i /loyalty
        use_backend loyalty_backend if loyalty_ep

        acl orders_ep path_end -i /orders
        use_backend orders_backend if orders_ep

        acl delivery_ep path_end -i /delivery
        use_backend delivery_backend if delivery_ep


frontend prometheus
        bind *:9090
        default_backend prometheus_backend

frontend control-plane
        bind *:6443
        default_backend kube-apiservers

frontend graphana_interface
        bind *:3001
        default_backend graphana_server

frontend graphana_alerting
        bind *:9000
        default_backend graphana_alert_server

backend loyalty_backend
        server datacenter 3.136.68.73:8000 check inter 5s downinter 5s fall 3 rise 3
# server backup_server 0.0.0.0:2345 check backup

backend prometheus_backend
        server master1 192.168.56.11:30010 check inter 5s downinter 5s fall 3 rise 3
        server master2 192.168.56.12:30010 check inter 5s downinter 5s fall 3 rise 3

backend graphana_alert_server
#        server self_3123 localhost:3123
        server master1 192.168.56.11:30020
        server master2 192.168.56.12:30020

backend graphana_server
# http-request set-path %[path,regsub(^/grafana/,/,g)]
        option httpchk GET /healthz
        server master1 192.168.56.11:30000 check inter 5s downinter 5s fall 3 rise 3
        server master2 192.168.56.12:30000 check inter 5s downinter 5s fall 3 rise 3
  # server self_3000 localhost:3000

backend kube-apiservers
        option httpchk GET /healthz
        server master1 192.168.56.11:6443 check check-ssl verify none
        server master2 192.168.56.12:6443 check check-ssl verify none

# backend flask_backend_public_cloud
  # server public_cloud localhost:8000 check inter 5s downinter 5s fall 3 rise 3
  #   server datacenter ec2-18-118-168-228.us-east-2.compute.amazonaws.com:8000 check inter 5s downinter 5s fall 3 rise 3

backend orders_backend
  # server public_cloud localhost:8001 check inter 5s downinter 5s fall 3 rise 3
        server public_cloud_master1 192.168.56.11:30749 check inter 5s downinter 5s fall 3 rise 3
        server public_cloud_master2 192.168.56.12:30749 check inter 5s downinter 5s fall 3 rise 3
        server datacenter 3.136.68.73:8000 check inter 5s downinter 5s fall 3 rise 3
  # server backup_server 0.0.0.0:2345 check backup

backend delivery_backend
  # server public_cloud localhost:8002 check inter 5s downinter 5s fall 3 rise 3
        server public_cloud_master1 192.168.56.11:30750 check inter 5s downinter 5s fall 3 rise 3
        server public_cloud_master2 192.168.56.12:30750 check inter 5s downinter 5s fall 3 rise 3
        server datacenter 3.136.68.73:8000 check inter 5s downinter 5s fall 3 rise 3